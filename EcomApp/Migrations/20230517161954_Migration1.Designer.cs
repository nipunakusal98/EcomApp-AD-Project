// <auto-generated />
using System;
using EcomApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcomApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230517161954_Migration1")]
    partial class Migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcomApp.Models.ComputerCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryPictuerURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("ComputerCategories");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AntiVirus")
                        .HasColumnType("int");

                    b.Property<int>("ComputerProcessorId")
                        .HasColumnType("int");

                    b.Property<int>("ComputerSeriesId")
                        .HasColumnType("int");

                    b.Property<int>("ComputerVGAId")
                        .HasColumnType("int");

                    b.Property<string>("ModelPictuerURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperatingSystems")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RAMId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComputerProcessorId");

                    b.HasIndex("ComputerSeriesId");

                    b.HasIndex("ComputerVGAId");

                    b.HasIndex("RAMId");

                    b.ToTable("ComputerModels");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerProcessor", b =>
                {
                    b.Property<int>("ComputerProcessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComputerProcessorId"));

                    b.Property<int?>("ConfigurationItemConfigId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessorDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessorPictuerURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessorPrice")
                        .HasColumnType("int");

                    b.HasKey("ComputerProcessorId");

                    b.HasIndex("ConfigurationItemConfigId");

                    b.ToTable("ComputerProcessors");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerRAM", b =>
                {
                    b.Property<int>("RAMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RAMId"));

                    b.Property<int?>("ConfigurationItemConfigId")
                        .HasColumnType("int");

                    b.Property<string>("RAMDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMPictuerURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RAMPrice")
                        .HasColumnType("int");

                    b.HasKey("RAMId");

                    b.HasIndex("ConfigurationItemConfigId");

                    b.ToTable("ComputerRAMs");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerSeries", b =>
                {
                    b.Property<int>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeriesId"));

                    b.Property<int>("ComputerCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SeriesIconURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeriesId");

                    b.HasIndex("ComputerCategoryId");

                    b.ToTable("ComputerSeries");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerVGA", b =>
                {
                    b.Property<int>("ComputerVGAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComputerVGAId"));

                    b.Property<string>("ComputerVGADescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComputerVGAPrice")
                        .HasColumnType("int");

                    b.Property<int?>("ConfigurationItemConfigId")
                        .HasColumnType("int");

                    b.Property<string>("VGAPictuerURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComputerVGAId");

                    b.HasIndex("ConfigurationItemConfigId");

                    b.ToTable("ComputerVGAs");
                });

            modelBuilder.Entity("EcomApp.Models.ConfigurationItem", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigId"));

                    b.Property<int>("AntiVirus")
                        .HasColumnType("int");

                    b.Property<int>("ComputerModelId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigurationType")
                        .HasColumnType("int");

                    b.Property<int>("OperatingSystems")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ConfigId");

                    b.HasIndex("ComputerModelId");

                    b.HasIndex("OrderId");

                    b.ToTable("ConfigurationItems");
                });

            modelBuilder.Entity("EcomApp.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EcomApp.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComputerModelId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShippingMethod")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ComputerModelId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EcomApp.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardholderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EcomApp.Models.ProcessorBrand", b =>
                {
                    b.Property<int>("ProcessorBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessorBrandId"));

                    b.Property<string>("ProcessorBrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProcessorBrandId");

                    b.ToTable("ProcessorBrands");
                });

            modelBuilder.Entity("EcomApp.Models.RAMBrand", b =>
                {
                    b.Property<int>("RAMBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RAMBrandId"));

                    b.Property<string>("RAMBrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RAMBrandId");

                    b.ToTable("RAMBrands");
                });

            modelBuilder.Entity("EcomApp.Models.VGABrand", b =>
                {
                    b.Property<int>("VGABrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VGABrandId"));

                    b.Property<string>("VGABrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VGABrandId");

                    b.ToTable("VGABrands");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerModel", b =>
                {
                    b.HasOne("EcomApp.Models.ComputerProcessor", "ComputerProcessor")
                        .WithMany("ComputerModels")
                        .HasForeignKey("ComputerProcessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcomApp.Models.ComputerSeries", "ComputerSeries")
                        .WithMany("ComputerModels")
                        .HasForeignKey("ComputerSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcomApp.Models.ComputerVGA", "ComputerVGA")
                        .WithMany("ComputerModels")
                        .HasForeignKey("ComputerVGAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcomApp.Models.ComputerRAM", "ComputerRAM")
                        .WithMany("ComputerModels")
                        .HasForeignKey("RAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComputerProcessor");

                    b.Navigation("ComputerRAM");

                    b.Navigation("ComputerSeries");

                    b.Navigation("ComputerVGA");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerProcessor", b =>
                {
                    b.HasOne("EcomApp.Models.ConfigurationItem", null)
                        .WithMany("ComputerProcessors")
                        .HasForeignKey("ConfigurationItemConfigId");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerRAM", b =>
                {
                    b.HasOne("EcomApp.Models.ConfigurationItem", null)
                        .WithMany("ComputerRAMs")
                        .HasForeignKey("ConfigurationItemConfigId");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerSeries", b =>
                {
                    b.HasOne("EcomApp.Models.ComputerCategory", "ComputerCategory")
                        .WithMany("ComputerSeries")
                        .HasForeignKey("ComputerCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComputerCategory");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerVGA", b =>
                {
                    b.HasOne("EcomApp.Models.ConfigurationItem", null)
                        .WithMany("ComputerVGAs")
                        .HasForeignKey("ConfigurationItemConfigId");
                });

            modelBuilder.Entity("EcomApp.Models.ConfigurationItem", b =>
                {
                    b.HasOne("EcomApp.Models.ComputerModel", "ComputerModel")
                        .WithMany("ConfigurationItems")
                        .HasForeignKey("ComputerModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcomApp.Models.Order", null)
                        .WithMany("ConfigurationItems")
                        .HasForeignKey("OrderId");

                    b.Navigation("ComputerModel");
                });

            modelBuilder.Entity("EcomApp.Models.Order", b =>
                {
                    b.HasOne("EcomApp.Models.ComputerModel", "ComputerModel")
                        .WithMany("Orders")
                        .HasForeignKey("ComputerModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcomApp.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComputerModel");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EcomApp.Models.Payment", b =>
                {
                    b.HasOne("EcomApp.Models.Customer", null)
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId");

                    b.HasOne("EcomApp.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerCategory", b =>
                {
                    b.Navigation("ComputerSeries");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerModel", b =>
                {
                    b.Navigation("ConfigurationItems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerProcessor", b =>
                {
                    b.Navigation("ComputerModels");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerRAM", b =>
                {
                    b.Navigation("ComputerModels");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerSeries", b =>
                {
                    b.Navigation("ComputerModels");
                });

            modelBuilder.Entity("EcomApp.Models.ComputerVGA", b =>
                {
                    b.Navigation("ComputerModels");
                });

            modelBuilder.Entity("EcomApp.Models.ConfigurationItem", b =>
                {
                    b.Navigation("ComputerProcessors");

                    b.Navigation("ComputerRAMs");

                    b.Navigation("ComputerVGAs");
                });

            modelBuilder.Entity("EcomApp.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EcomApp.Models.Order", b =>
                {
                    b.Navigation("ConfigurationItems");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
